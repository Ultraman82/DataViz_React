{"version":3,"sources":["App/AppLayout.js","App/AppProvider.js","App/AppBar.js","Settings/WelcomeMessage.js","Shared/Styles.js","Settings/ConfirmButton.js","Shared/Page.js","Shared/Tile.js","Settings/CoinHeaderGrid.js","Shared/CoinImage.js","Settings/CoinTile.js","Settings/CoinGrid.js","Settings/Search.js","Settings/index.js","Dashboard/PriceTile.js","Dashboard/PriceGrid.js","Dashboard/CoinSpotLight.js","Dashboard/HighchartsConfig.js","Dashboard/HighchartsTheme.js","Dashboard/ChartSelect.js","Dashboard/PriceChart.js","Dashboard/index.js","Shared/Content.js","App/index.js","serviceWorker.js","index.js"],"names":["styled","div","_templateObject","cc","require","setApiKey","AppContext","React","createContext","MAX_FAVORITES","TIME_UNIT","AppProvider","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","addCoin","key","favorites","toConsumableArray","state","length","push","setState","removeCoin","_","pull","isInFavorites","includes","componentDidMount","fetchCoins","fetchPrices","fetchHistorical","asyncToGenerator","regenerator_default","a","mark","_callee","coinList","wrap","_context","prev","next","sent","Data","stop","_callee2","prices","_context2","firstVisit","abrupt","_callee3","results","historical","BTCresults","BTChistorical","_context3","name","currentFavorite","data","map","ticker","index","moment","subtract","defineProperty","timeInterval","valueOf","USD","_callee4","returnData","i","priceData","_context4","priceFull","t0","console","warn","promises","units","priceHistorical","toDate","Promise","all","confirmFavorites","page","localStorage","setItem","JSON","stringify","setCurrentFavorite","sym","objectSpread","parse","getItem","setPage","setFilteredCoins","filteredCoins","changeChartSelect","value","savedSettings","inherits","createClass","cryptoDashData","react_default","createElement","Provider","children","Component","Logo","AppBar_templateObject","Bar","_templateObject2","ControlButtonElem","_templateObject3","active","css","_templateObject4","hidden","_templateObject5","ControlButton","_ref","Consumer","_ref2","lower","onClick","charAt","toUpperCase","substr","AppBar","WelcomeMessage","lightBlueBackground","concat","backgroundColor2","subtleBoxShadow","greenBoxShadow","ConfirmButtonStyled","ConfirmButton_templateObject","CenterDiv","ConfirmButton_templateObject2","ConfirmButton","Page","Tile","Tile_templateObject","SelectableTile","Tile_templateObject2","DeletableTile","Tile_templateObject3","DisabledTile","Tile_templateObject4","CoinHeaderGridStyled","CoinHeaderGrid_templateObject","CoinSymbol","CoinHeaderGrid_templateObject2","DeleteIcon","CoinHeaderGrid_templateObject3","CoinHeaderGrid","symbol","topSection","CoinImage","img","CoinImage_templateObject","spotlight","CoinImage_templateObject2","Shared_CoinImage","coin","alt","src","ImageUrl","clickCoinHandler","coinKey","CoinTile","TileClass","CoinName","Symbol","CoinGridStyled","CoinGrid_templateObject","getCoinsToDisplay","filterCoins","keys","slice","getLowerSectionCoins","CoinGrid","SearchGrid","Search_templateObject","SearchInput","input","Search_templateObject2","handleFilter","debounce","inputValue","coinSymbols","coinNames","allStringsToSearch","fuzzyResults","fuzzy","filter","result","string","pickBy","symKey","coinName","log","Search","onKeyUp","e","target","Settings","JustifyRight","PriceTile_templateObject","JustifyLeft","PriceTile_templateObject2","TickerPrice","PriceTile_templateObject3","ChangePercent","ChangePct","red","CHANGEPCT24HOUR","numberFormat","PriceTile_templateObject4","PriceTile_templateObject5","number","PriceTileStyled","_templateObject6","compact","_templateObject7","_templateObject8","PriceTile","PRICE","PriceTileCompact","_ref3","Dashboard_PriceTile","_ref4","price","_ref5","PriceGrid","PriceGrid_templateObject","Dashboard_PriceGrid","SpotlightName","h2","CoinSpotLight_templateObject","CoinSpotLight","HighchartsConfig","yAxis","color","title","text","xAxis","type","gridLineWidth","labels","align","x","y","format","showFirstLabel","opposite","legend","verticalAlign","borderWidth","tooltip","shared","crosshairs","plotOptions","series","cursor","HighchartsTheme","colors","chart","backgroundColor","borderColor","className","plotBackgroundColor","plotBorderWidth","style","font","subtitle","gridLineColor","lineColor","tickColor","fontWeight","fontSize","fontFamily","minorTickInterval","tickWidth","toolbar","itemStyle","line","dataLabels","marker","spline","scatter","candlestick","itemHoverStyle","itemHiddenStyle","credits","enabled","navigation","buttonOptions","symbolStroke","hoverSymbolStroke","theme","fill","linearGradient","x1","y1","x2","y2","stops","stroke","rangeSelector","buttonTheme","states","hover","select","inputStyle","labelStyle","navigator","handles","outlineColor","maskFill","scrollbar","barBackgroundColor","barBorderColor","buttonArrowColor","buttonBackgroundColor","buttonBorderColor","rifleColor","trackBackgroundColor","trackBorderColor","legendBackgroundColor","background2","dataLabelsColor","textColor","maskColor","ChartSelect_templateObject","ReactHighcharts","Highcharts","setOptions","HishchartsTheme","PriceChart","ChartSelect","defaultValue","onChange","ReactHighcharts_default","config","highchartsConfig","ChartGird","Dashboard_templateObject","Dashboard","Content","App","AppLayout","AppProvider_AppProvider","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f3475cd5.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport default styled.div`\n    padding: 40px;\n`","import React from 'react';\nimport moment from 'moment';\nimport _ from 'lodash';\nconst cc = require('cryptocompare');\ncc.setApiKey('49db4dd3a0b08f91a5d85f1aee84ad649050b2a65ca6f28e635be7fc38fc1e07')\nexport const AppContext = React.createContext();\n\nconst MAX_FAVORITES = 10;\nconst TIME_UNIT = 10;\n\nexport class AppProvider extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            page: 'dashboard',\n            favorites: ['BTC', 'ETH', 'XMR', 'DOGE'],\n            ...this.savedSettings(),\n            timeInterval: 'months', \n            setPage: this.setPage,\n            addCoin: this.addCoin,\n            removeCoin: this.removeCoin, \n            isInFavorites: this.isInFavorites,\n            confirmFavorites: this.confirmFavorites,\n            setCurrentFavorite: this.setCurrentFavorite,\n            setFilteredCoins: this.setFilteredCoins,\n            changeChartSelect: this.changeChartSelect            \n        }\n    }    \n\n    addCoin = key => {\n        let favorites = [...this.state.favorites];\n        if(favorites.length < MAX_FAVORITES){\n            favorites.push(key);\n            this.setState({favorites});\n        }\n    }\n\n    removeCoin = key =>{\n        let favorites = [...this.state.favorites];\n        this.setState({favorites: _.pull(favorites, key)});\n    }\n\n    isInFavorites = key => _.includes(this.state.favorites, key);\n\n    componentDidMount = () => {\n        this.fetchCoins();\n        this.fetchPrices();\n        this.fetchHistorical();\n    }\n\n    fetchCoins = async () => {\n        let coinList = (await cc.coinList()).Data;\n        this.setState({coinList}); \n    }\n\n    fetchPrices = async () => {\n        if(this.state.firstVisit) return;\n        let prices = await this.prices();        \n        this.setState({prices}); \n    }\n    \n    fetchHistorical = async () => {\n        if(this.state.firstVisit) return;\n        let results = await this.historical();                \n        let historical = [\n            {\n                name: this.state.currentFavorite,\n                data: results.map((ticker, index) => [\n                    moment().subtract({[this.state.timeInterval]: TIME_UNIT - index}).valueOf(), \n                    ticker.USD\n                ])\n            }\n        ];\n        this.setState({historical});\n        let BTCresults = await this.BTChistorical();                \n        let BTChistorical = [\n            {\n                name: 'BTC',\n                data: BTCresults.map((ticker, index) => [\n                    moment().subtract({[this.state.timeInterval]: TIME_UNIT - index}).valueOf(), \n                    ticker.USD\n                ])\n            }\n        ];\n        this.setState({BTChistorical});\n    }\n    \n    prices = async () => {\n        let returnData = [];                \n        for(let i = 0; i < this.state.favorites.length; i++){            \n            try {\n                let priceData = await cc.priceFull(this.state.favorites[i], 'USD');\n                returnData.push(priceData);                         \n            } catch (e) {\n                console.warn('Fetch price error: ', e);\n            }\n        }        \n        return returnData;\n    }\n\n    historical = () => {\n        let promises = [];\n        for (let units = TIME_UNIT;units > 0; units--){\n            promises.push(\n                cc.priceHistorical(\n                    this.state.currentFavorite,\n                    ['USD'],\n                    moment()\n                    .subtract({[this.state.timeInterval]: units})\n                    .toDate()\n                )\n            )\n        }        \n        return Promise.all(promises);\n    }\n    BTChistorical = () => {\n        let promises = [];\n        for (let units = TIME_UNIT;units > 0; units--){\n            promises.push(\n                cc.priceHistorical(\n                    'BTC',\n                    ['USD'],\n                    moment()\n                    .subtract({[this.state.timeInterval]: units})\n                    .toDate()\n                )\n            )\n        }        \n        return Promise.all(promises);\n    }\n    \n    confirmFavorites = () => {\n        let currentFavorite = this.state.favorites[0];\n        this.setState({\n            firstVisit: false,\n            page: 'dashboard',\n            currentFavorite,\n            prices: null,\n            historical: null,\n            BTChistorical: null\n        }, () => {\n            this.fetchPrices();\n            this.fetchHistorical();\n        });\n        localStorage.setItem('cryptoDash', JSON.stringify({\n            favorites: this.state.favorites,\n            currentFavorite            \n        }));\n    }\n\n    setCurrentFavorite = (sym) => {\n        this.setState({\n            currentFavorite: sym,\n            historical: null,\n            BTChistorical: null,\n        }, this.fetchHistorical);\n        localStorage.setItem('cryptoDash', JSON.stringify({\n            ...JSON.parse(localStorage.getItem('cryptoDash')),\n            currentFavorite: sym\n        }))\n    }\n    savedSettings(){\n        let cryptoDashData   = JSON.parse(localStorage.getItem('cryptoDash'));\n        if(!cryptoDashData){\n            return {page: 'settings', firstVisit: true}\n        }\n        let {favorites, currentFavorite} = cryptoDashData;\n        return{favorites, currentFavorite};        \n        //* return cryptoDashData;\n    }\n    setPage = page => this.setState({page});\n\n    setFilteredCoins = (filteredCoins) => this.setState({filteredCoins});\n\n    changeChartSelect = (value) => {        \n        this.setState({timeInterval: value, historical: null});\n        this.fetchHistorical();\n    }\n\n    render(){\n        return(\n            <AppContext.Provider value={this.state}>                \n                {this.props.children}\n            </AppContext.Provider>\n        )\n    \n    }\n}","import React from 'react';\nimport styled, {css} from 'styled-components';\nimport { AppContext } from './AppProvider';\n\nconst Logo = styled.div`\n    font-size: 1.5em;\n`\nconst Bar = styled.div`\n    display: grid;\n    margin-bottom: 40px\n    grid-template-columns: 180px auto 100px 180px;\n`\n\nconst ControlButtonElem = styled.div`\n    cursor: pointer;\n    ${props => props.active && css`\n        text-shadow: 0px 0px 60px #03ff03;\n    `}\n    ${props => props.hidden && css`\n        display: none;\n    `}\n`\nfunction toProperCase(lower){\n    return lower.charAt(0).toUpperCase() + lower.substr(1);\n}\n\nfunction ControlButton({name}){\n    return (\n        <AppContext.Consumer>\n            {({firstVisit, page, setPage}) => (\n                <ControlButtonElem\n                   active = {page === name}\n                   onClick={() => setPage(name)}\n                   hidden={firstVisit && name === 'dashboard'}\n                >\n                    {toProperCase(name)}\n                </ControlButtonElem>\n            )}\n        </AppContext.Consumer>\n    )\n    \n}\n\n\nexport default function(){\n    return(\n        <Bar>\n            <Logo> CryptoDash </Logo>\n            <div/>\n            <ControlButton active name = \"dashboard\"/>\n            <ControlButton name = \"settings\"/>\n        </Bar>    \n    )\n}","import React from 'react';\nimport {AppContext} from \"../App/AppProvider\";\n\nexport default function ({firstVisit}) {\n  return (\n    <AppContext.Consumer>\n      {({firstVisit}) => \n        firstVisit ? <div>\n          Welcome to CryptoDash, please select your favorite coins to bdgin.{' '}\n          </div> : null\n      }\n\n    </AppContext.Consumer>\n\n  )\n  \n  \n}\n\n\n\n\n\n\n","const theme = 'dark';\n//const theme = 'light';\nexport const lightTheme = theme === 'light';\n\nexport const color = lightTheme ? 'white' : '#061a44';\nexport const color2 = lightTheme ? 'white' : '#010e2c';\nexport const color3 = lightTheme ? '#09f010' : '#42ff3a';\n\nif (lightTheme) {\n  document.body.style.background = '#e1eaee';\n  document.body.style.color = '#061a44';\n}\n\nexport const lightBlueBackground = `background-color: ${color}`;\nexport const backgroundColor2 = `background-color: ${color2};`;\nexport const greenBackgroundColor = `background-color: ${color3};`;\n\nexport const fontColorGreen = `color: #03A9F4`;\nexport const fontColorWhite = `color: white`;\nexport const subtleBoxShadow = `box-shadow: 0px 0px 5px 1px ${lightTheme ? '#a9b6ff' : '#121d5b'}`;\nexport const greenBoxShadow = `box-shadow: 0px 0px 4px 2px #5fff17`;\nexport const redBoxShadow = `box-shadow: 0px 0px 2px 2px #e41111`;\n\nexport const fontSizeBig = 'font-size: 2em';\nexport const fontSize1 = 'font-size: 1.5em;';\nexport const fontSize2 = 'font-size: 1.0em';\nexport const fontSize3 = 'font-size: .75em';\n\nexport const textAlignCenter = 'text-align: center;';","import React from 'react';\nimport styled from 'styled-components';\nimport {AppContext} from \"../App/AppProvider\";\nimport {fontSize1, greenBoxShadow, color3} from \"../Shared/Styles\";\n\nconst ConfirmButtonStyled = styled.div`\n    margin: 20px;\n    color: ${color3};\n    ${fontSize1}\n    padding: 5px;\n    cursor: pointer;\n    &:hover{\n        ${greenBoxShadow}        \n    }\n`\n\nexport const CenterDiv = styled.div`\n    display: grid;\n    justify-content: center;\n`\n\nexport default function (){\n    return (\n    <AppContext.Consumer>\n        {({confirmFavorites}) =>\n         <ConfirmButtonStyled onClick={confirmFavorites}>\n            <CenterDiv>\n                Confirm Favorites\n            </CenterDiv>            \n        </ConfirmButtonStyled>}\n    </AppContext.Consumer>\n\n    )\n\n}","import React from 'react';\nimport {AppContext} from \"../App/AppProvider\";\n\nexport default function ({name, children}) {\n    return <AppContext.Consumer>\n        {({page}) => {\n            if (page !== name) {\n                return null;\n            }\n            return <div> {children} </div>\n        }}\n        </AppContext.Consumer>\n}","import styled from 'styled-components'\nimport { subtleBoxShadow, lightBlueBackground, greenboxShadow, redBoxShadow, greenBoxShadow} from './Styles';\n\nexport const Tile = styled.div`\n    ${subtleBoxShadow}\n    ${lightBlueBackground}\n    padding: 10px;\n`\nexport const SelectableTile = styled(Tile)`\n    &:hover {\n        cursor: pointer;\n        ${greenBoxShadow}\n    }        \n`\n\nexport const DeletableTile = styled(SelectableTile)`\n    &:hover {\n        cursor: pointer;\n        ${redBoxShadow}\n    }        \n`;\n\nexport const DisabledTile = styled(Tile)`\n    pointer-events: none;\n    opacity: 0.4;\n`;","import React from 'react'\nimport styled from \"styled-components\";\nimport {DeletableTile} from \"../Shared/Tile\";\n\nexport const CoinHeaderGridStyled = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n`;\n\nexport const CoinSymbol = styled.div`\n    justify-self: right;\n`\n\nconst DeleteIcon = styled.div`\n    justify-self:right;\n    display: none;\n    ${DeletableTile}:hover & {\n        display: block;\n        color: red;\n    }\n`;\n\nexport default function({name, symbol, topSection}){\n    return (\n        <CoinHeaderGridStyled>\n            <div> {name} </div>\n            {topSection ? (\n                <DeleteIcon> X </DeleteIcon>\n            ) : (<CoinSymbol> {symbol} </CoinSymbol>) }\n            <CoinSymbol> {symbol} </CoinSymbol>\n        </CoinHeaderGridStyled>\n    )\n}","import React from 'react';\nimport styled, {css}  from 'styled-components';\n\nconst CoinImage = styled.img`\n    height: 50px;\n    ${props => props.spotlight && css`\n        height: 200px;\n        margin: auto;\n        display: block;\n    `}\n`\n\n\nexport default function({coin, spotlight}) {    \n    return(\n        <CoinImage\n        spotlight={spotlight}\n            alt={coin.CoinSymbol}            \n            src={`http://cryptocompare.com/${\n                coin.ImageUrl}\n                `}\n        />\n    );\n}\n\n\n\n","import React from 'react';\nimport { AppContext } from '../App/AppProvider';\nimport {SelectableTile, DisabledTile, DeletableTile} from \"../Shared/Tile\";\nimport CoinHeaderGrid from './CoinHeaderGrid';\nimport CoinImage from '../Shared/CoinImage';\n\nfunction clickCoinHandler(topSection, coinKey, addCoin, removeCoin) {\n    return topSection ? () => {\n        removeCoin(coinKey)\n    } : () => {\n        addCoin(coinKey)\n    }\n}\n\n\nexport default function({coinKey, topSection}){\n    return(\n        <AppContext.Consumer>\n            {({coinList, addCoin, removeCoin, isInFavorites}) => {\n                let coin = coinList[coinKey];\n\n                let TileClass = SelectableTile;\n                if(topSection){\n                   TileClass = DeletableTile; \n                }else if(isInFavorites(coinKey)) {\n                    TileClass = DisabledTile;\n                }\n                return (\n                    <TileClass\n                        onClick= {clickCoinHandler(topSection, coinKey, addCoin, removeCoin)}\n                    >\n                        <CoinHeaderGrid \n                            topSection={topSection}\n                            name = {coin.CoinName}\n                            symbol={coin.Symbol}\n                        />\n                        <CoinImage coin={coin} />                        \n                    </TileClass>\n                )\n                \n            }}            \n        </AppContext.Consumer>\n    )\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport {AppContext} from \"../App/AppProvider\";\n//import {SelectableTile} from \"../Shared/Tile\";\nimport CoinTile from \"./CoinTile\";\n//import { filter } from 'fuzzy';\n\nexport const CoinGridStyled = styled.div`\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(130px, 1fr));\n    grid-gap: 15px;\n    margin-top: 40px;\n`\n\nfunction getLowerSectionCoins(coinList, filteredCoins) {\n    return (filteredCoins && Object.keys(filteredCoins)) ||\n        Object.keys(coinList).slice(0, 100)\n}\n\nfunction getCoinsToDisplay(coinList, topSection, favorites, filterCoins){ \n    return topSection ? favorites : getLowerSectionCoins(coinList, filterCoins); \n}\n\nexport default function ({topSection}){\n    return (\n        <AppContext.Consumer>\n            {({coinList, favorites, filteredCoins}) => (\n                <CoinGridStyled>\n                    {getCoinsToDisplay(coinList, topSection, favorites, filteredCoins).map(coinKey => \n                    <CoinTile key={coinKey} topSection={topSection} coinKey={coinKey} />\n                    )}\n                </CoinGridStyled>\n            )}\n        </AppContext.Consumer>\n    );\n}","import React from 'react';\nimport styled from 'styled-components';\nimport {backgroundColor2, fontSize2}  from \"../Shared/Styles\";\nimport {AppContext} from \"../App/AppProvider\";\nimport _ from 'lodash';\nimport fuzzy from 'fuzzy';\n\nconst SearchGrid = styled.div `\n    display: grid;\n    grid-template-columns: 200px 1fr;\n`\n\nconst SearchInput = styled.input`\n    ${backgroundColor2}\n    ${fontSize2}\n    border: 1px dolid;\n    height: 25px;\n    color: #1163c9;\n    place-self: center left;    \n`\n\nconst handleFilter = _.debounce((inputValue, coinList, setFilteredCoins) => {\n    // Get all the coin symbols\n    let coinSymbols = Object.keys(coinList);\n    // Get all the coin names, map symbol to name\n    let coinNames = coinSymbols.map(sym => coinList[sym].CoinName)\n    let allStringsToSearch = coinSymbols.concat(coinNames);\n    let fuzzyResults = fuzzy\n        .filter(inputValue, allStringsToSearch, {})\n        .map(result => result.string);\n    let filteredCoins = _.pickBy(coinList, (result, symKey) => {\n        let coinName = result.CoinName;\n        return (_.includes(fuzzyResults, symKey) || _.includes(fuzzyResults, coinName));\n    });\n    console.log(filteredCoins);\n    setFilteredCoins(filteredCoins);\n}, 500);\n\nfunction filterCoins(e, setFilteredCoins, coinList){\n    let inputValue = e.target.value;\n    if(!inputValue){\n        setFilteredCoins(null);\n        return;\n    }\n    handleFilter(inputValue, coinList, setFilteredCoins);\n}\n\n\nexport default function() {\n    return (\n        <AppContext.Consumer>\n            {({setFilteredCoins, coinList}) => \n            <SearchGrid>\n                <h2> Search all coins </h2>\n                <SearchInput onKeyUp={(e) => filterCoins(e, setFilteredCoins, coinList)}/>\n            </SearchGrid> \n            }\n        </AppContext.Consumer>\n        \n    )\n}","import React from 'react';\nimport WelcomeMessage from './WelcomeMessage';\nimport ConfirmButton from './ConfirmButton';\nimport Page from '../Shared/Page';\nimport CoinGrid from './CoinGrid';\nimport Search from './Search';\n\nexport default function(){\n    return (\n        <Page name = \"settings\">\n            <WelcomeMessage/>\n            <CoinGrid topSection/>\n            <ConfirmButton/> \n            <Search />\n            <CoinGrid/>\n        </Page>\n    )\n}","import React from 'react';\nimport styled, {css} from 'styled-components';\nimport {SelectableTile} from \"../Shared/Tile\";\nimport {fontSize3, fontSizeBig, greenBoxShadow   } from \"../Shared/Styles\";\nimport { CoinHeaderGridStyled } from '../Settings/CoinHeaderGrid';\nimport {AppContext} from \"../App/AppProvider\";\n\nconst JustifyRight = styled.div`\n    justify-self: rights;\n`\nconst JustifyLeft = styled.div`\n    justify-self: left;\n`\nconst TickerPrice = styled.div`\n    ${fontSizeBig};\n`\nfunction ChangePercent({data}){\n    return(\n        <JustifyRight>\n            <ChangePct red={data.CHANGEPCT24HOUR < 0}>\n                {numberFormat(data.CHANGEPCT24HOUR)}%\n            </ChangePct>                    \n        </JustifyRight>\n    )\n}\nconst ChangePct = styled.div`\n    color: green;\n    ${props => props.red && css` \n        color: red;\n    `}\n`\nconst numberFormat = number => {\n    return +(number + '').slice(0, 7);\n}\n\nconst PriceTileStyled = styled(SelectableTile)`\n    ${props => props.compact && css`\n        display: grid;\n        ${fontSize3}\n        grid-gap: 15\n        grid-template-columns: repeat(3, 1fr);\n        justify-items: right;\n    `}\n\n    ${props => props.currentFavorite && css`\n        ${greenBoxShadow} \n        pointer-events: none;\n    `}\n`\nfunction PriceTile({sym, data, currentFavorite, setCurrentFavorite}){\n    return(\n        <PriceTileStyled onClick={setCurrentFavorite} currentFavorite={currentFavorite}>\n            <CoinHeaderGridStyled>\n                <div> {sym} </div>\n                <ChangePercent data={data}/>\n            </CoinHeaderGridStyled>\n            <TickerPrice>\n                ${numberFormat(data.PRICE)}\n                </TickerPrice>\n        </PriceTileStyled>\n    )\n}\n\nfunction PriceTileCompact({sym, data, currentFavorite, setCurrentFavorite}){\n    return(\n        <PriceTileStyled onClick={setCurrentFavorite} compact currentFavorite={currentFavorite}>              \n            <JustifyLeft> {sym} </JustifyLeft>\n            <ChangePercent data={data}/>\n            \n        <div>\n            ${numberFormat(data.PRICE)}\n            </div>\n        </PriceTileStyled>\n    );\n}\nexport default function ({price, index}){\n    let sym = Object.keys(price)[0];\n    let data = price[sym]['USD'];\n    let TileClass= index< 5 ? PriceTile: PriceTileCompact;\n\n    return (\n        <AppContext.Consumer>\n            {({currentFavorite, setCurrentFavorite}) =>\n                <TileClass \n                    sym={sym} \n                    data={data} \n                    currentFavorite={currentFavorite === sym}\n                    setCurrentFavorite={()=>  setCurrentFavorite(sym)}\n                    >            \n\n                </TileClass>\n            }            \n        </AppContext.Consumer>\n\n\n\n    )\n}","import React from 'react';\nimport styled from 'styled-components';\nimport {AppContext} from \"../App/AppProvider\";\nimport PriceTile from './PriceTile';\n\nconst PriceGrid = styled.div`\n    display: grid;\n    grid-template-columns: repeat(5, 1fr);\n    grid-gap: 15px;\n    margin-top 40px;    \n`\n\nexport default function () {\n    return (\n        <AppContext.Consumer>\n            {({prices}) => (\n                <PriceGrid>\n                    {prices.map((price, index) =>\n                        <PriceTile key={`priceTile-${index}`} index={index} price={price}/>)}\n                </PriceGrid>\n            )}\n        </AppContext.Consumer>\n    );  \n}","import React from 'react';\nimport styled from \"styled-components\";\nimport {Tile} from \"../Shared/Tile\";\nimport {AppContext} from \"../App/AppProvider\";\nimport CoinImage from \"../Shared/CoinImage\";\n\nconst SpotlightName = styled.h2`\n    text-align: center;\n`\n\nexport default function() {\n    return(        \n        <AppContext.Consumer>\n            {({currentFavorite, coinList}) => \n                <Tile> \n                <SpotlightName>{coinList[currentFavorite].CoinName}</SpotlightName>\n                <CoinImage spotlight coin={coinList[currentFavorite]} />\n                </Tile>\n            }\n        \n        </AppContext.Consumer>\n        \n    )\n}","export default function(historical, BTChistorical) {\n  console.log(BTChistorical);\n  historical[0].yAxis = 0;\n  BTChistorical[0].yAxis = 1;\n  BTChistorical[0].color = \"#ff0000\";\n  //BTChistorical[0].type = \"spline\";\n  return {\n    title: {\n      text: \"\"\n    },\n\n    xAxis: {\n      type: \"datetime\",\n      gridLineWidth: 1,\n      labels: {\n        align: \"left\",\n        x: 3,\n        y: -3\n      }\n    },\n\n    yAxis: [\n      {\n        // left y axis\n        title: {\n          text: null\n        },\n        labels: {\n          align: \"left\",\n          x: 3,\n          y: 16,\n          format: \"{value:.,0f}\"\n        },\n        showFirstLabel: false\n      },\n      {\n        // right y axis\n        //          linkedTo: 0,\n        gridLineWidth: 0,\n        opposite: true,\n        title: {\n          text: null\n        },\n        labels: {\n          align: \"right\",\n          x: -3,\n          y: 16,\n          format: \"{value:.,0f}\"\n        },\n        showFirstLabel: false\n      }\n    ],\n\n    legend: {\n      align: \"left\",\n      verticalAlign: \"top\",\n      borderWidth: 0\n    },\n\n    tooltip: {\n      shared: true,\n      crosshairs: true\n    },\n\n    plotOptions: {\n      series: {\n        cursor: \"pointer\"\n        /* point: {\n                  events: {\n                      click: function (e) {\n                          hs.htmlExpand(null, {\n                              pageOrigin: {\n                                  x: e.pageX || e.clientX,\n                                  y: e.pageY || e.clientY\n                              },\n                              headingText: this.series.name,\n                              maincontentText: Highcharts.dateFormat('%A, %b %e, %Y', this.x) + ':<br/> ' +\n                                  this.y + ' sessions',\n                              width: 200\n                          });\n                      }\n                  }\n              },\n              marker: {\n                  lineWidth: 1\n              } */\n      }\n    },\n\n    series: [historical[0], BTChistorical[0]]\n  };\n}\n"," import {lightTheme} from \"../Shared/Styles\"; \n\n  export default {\n    colors: [\n        '#61D936',\n        '#552CCB',\n        '#04a1ee',\n        '#08C6e0',\n        '#146b9e',\n        '#1b2839'\n        ],\n    chart: {\n        backgroundColor: lightTheme? 'white' :'#061a44',\n        borderColor: '#000000',\n        borderWidth: 0,\n        className: 'dark-container',\n        plotBackgroundColor: lightTheme? 'white' :'#061a44',\n        plotBorderWidth: 0\n    },\n    title: {\n        style: {\n            color: '#C0C0C0',\n            font: 'bold 16px \"Trebuchet MS\", Verdana, sans-serif'\n        }\n    },\n    subtitle: {\n        style: {\n            color: '#666666',\n            font: 'bold 12px \"Trebuchet MS\", Verdana, sans-serif'\n        }\n    },\n    xAxis: {\n        gridLineColor: '#333333',\n        gridLineWidth: 0,\n        labels: {\n            style: {\n                color: '#A0A0A0'\n            }\n        },\n        lineColor: '#A0A0A0',\n        tickColor: '#A0A0A0',\n        title: {\n            style: {\n                color: '#CCC',\n                fontWeight: 'bold',\n                fontSize: '12px',\n                fontFamily: 'Trebuchet MS, Verdana, sans-serif'\n\n            }\n        }\n    },\n    yAxis: {\n        gridLineColor: '#333333',\n        gridLineWidth: 0,\n        labels: {\n            style: {\n                color: '#A0A0A0'\n            }\n        },\n        lineColor: '#A0A0A0',\n        minorTickInterval: null,\n        tickColor: '#A0A0A0',\n        tickWidth: 1,\n        title: {\n            style: {\n                color: '#CCC',\n                fontWeight: 'bold',\n                fontSize: '12px',\n                fontFamily: 'Trebuchet MS, Verdana, sans-serif'\n            }\n        }\n    },\n    tooltip: {\n        backgroundColor: 'rgba(0, 0, 0, 0.75)',\n        style: {\n            color: '#F0F0F0'\n        }\n    },\n    toolbar: {\n        itemStyle: {\n            color: 'silver'\n        }\n    },\n    plotOptions: {\n        line: {\n            dataLabels: {\n                color: '#CCC'\n            },\n            marker: {\n                lineColor: '#333'\n            }\n        },\n        spline: {\n            marker: {\n                lineColor: '#222'\n            }\n        },\n        scatter: {\n            marker: {\n                lineColor: '#333'\n            }\n        },\n        candlestick: {\n            lineColor: 'white'\n        }\n    },\n    legend: {\n        itemStyle: {\n            font: '9pt Trebuchet MS, Verdana, sans-serif',\n            color: '#A0A0A0'\n        },\n        itemHoverStyle: {\n            color: '#FFF'\n        },\n        itemHiddenStyle: {\n            color: '#444'\n        }\n    },\n    credits: {\n        enabled: false \n    },\n    labels: {\n        style: {\n            color: '#CCC'\n        }\n    },\n\n    navigation: {\n        buttonOptions: {\n            symbolStroke: '#DDDDDD',\n            hoverSymbolStroke: '#FFFFFF',\n            theme: {\n                fill: {\n                    linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\n                    stops: [\n                        [0.4, '#606060'],\n                        [0.6, '#333333']\n                    ]\n                },\n                stroke: '#000000'\n            }\n        }\n    },\n\n    // scroll charts\n    rangeSelector: {\n        buttonTheme: {\n            fill: {\n                linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\n                stops: [\n                    [0.4, '#888'],\n                    [0.6, '#555']\n                ]\n            },\n            stroke: '#000000',\n            style: {\n                color: '#CCC',\n                fontWeight: 'bold'\n            },\n            states: {\n                hover: {\n                    fill: {\n                        linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\n                        stops: [\n                            [0.4, '#BBB'],\n                            [0.6, '#888']\n                        ]\n                    },\n                    stroke: '#000000',\n                    style: {\n                        color: 'white'\n                    }\n                },\n                select: {\n                    fill: {\n                        linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\n                        stops: [\n                            [0.1, '#000'],\n                            [0.3, '#333']\n                        ]\n                    },\n                    stroke: '#000000',\n                    style: {\n                        color: 'yellow'\n                    }\n                }\n            }\n        },\n        inputStyle: {\n            backgroundColor: '#333',\n            color: 'silver'\n        },\n        labelStyle: {\n            color: 'silver'\n        }\n    },\n\n    navigator: {\n        handles: {\n            backgroundColor: '#666',\n            borderColor: '#AAA'\n        },\n        outlineColor: '#CCC',\n        maskFill: 'rgba(16, 16, 16, 0.5)',\n        series: {\n            color: '#7798BF',\n            lineColor: '#A6C7ED'\n        }\n    },\n\n    scrollbar: {\n        barBackgroundColor: {\n            linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\n            stops: [\n                [0.4, '#888'],\n                [0.6, '#555']\n            ]\n        },\n        barBorderColor: '#CCC',\n        buttonArrowColor: '#CCC',\n        buttonBackgroundColor: {\n            linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\n            stops: [\n                [0.4, '#888'],\n                [0.6, '#555']\n            ]\n        },\n        buttonBorderColor: '#CCC',\n        rifleColor: '#FFF',\n        trackBackgroundColor: {\n            linearGradient: { x1: 0, y1: 0, x2: 0, y2: 1 },\n            stops: [\n                [0, '#000'],\n                [1, '#333']\n            ]\n        },\n        trackBorderColor: '#666'\n    },\n\n    // special colors for some of the\n    legendBackgroundColor: 'rgba(0, 0, 0, 0.5)',\n    background2: 'rgb(35, 35, 70)',\n    dataLabelsColor: '#444',\n    textColor: '#C0C0C0',\n    maskColor: 'rgba(255,255,255,0.3)'\n};","import styled from 'styled-components';\nimport {backgroundColor2, fontSize2} from \"../Shared/Styles\";\n\nexport default styled.select`\n    ${backgroundColor2}\n    ${fontSize2}\n    color: #1163c9;\n    border: 1px solid;\n    margin: 5px;\n    float: right;\n`;","import highchartsConfig from \"./HighchartsConfig\";\nimport React from \"react\";\nimport { Tile } from \"../Shared/Tile\";\nimport { AppContext } from \"../App/AppProvider\";\nimport ReactHighcharts from \"react-highcharts\";\nimport HishchartsTheme from \"./HighchartsTheme\";\nimport ChartSelect from \"./ChartSelect\";\n\nReactHighcharts.Highcharts.setOptions(HishchartsTheme);\n\nexport default function() {\n  return (\n    <AppContext.Consumer>\n      {({ historical, BTChistorical, changeChartSelect }) => (\n        <Tile>\n          <ChartSelect\n            defaultValue={\"months\"}\n            onChange={e => changeChartSelect(e.target.value)}\n          >\n            <option value=\"days\"> Days </option>\n            <option value=\"weeks\"> Weeks </option>\n            <option value=\"months\"> Months </option>\n          </ChartSelect>\n          {historical && BTChistorical ? (\n            <ReactHighcharts\n              config={highchartsConfig(historical, BTChistorical)}\n            />\n          ) : (\n            <div> Loadig Historical Data </div>\n          )}\n        </Tile>\n      )}\n    </AppContext.Consumer>\n  );\n}\n","import React from 'react';\n\nimport Page from '../Shared/Page';\nimport PriceGrid from './PriceGrid';\nimport CoinSpotLight from \"./CoinSpotLight\"\nimport styled from \"styled-components\";\nimport PriceChart from './PriceChart';\n\n\nconst ChartGird = styled.div`\n    display: grid;\n    margin-top: 20px;\n    grid-gap: 15px;\n    grid-template-columns: 1fr 3fr;    \n`\nexport default function(){\n    return (\n        <Page name = \"dashboard\">\n            <PriceGrid />\n            <ChartGird>\n            <CoinSpotLight />             \n            <PriceChart/ >\n            </ChartGird>\n        </Page>\n    )\n}","import React from 'react';\nimport {AppContext} from \"../App/AppProvider\";\n\nexport default function(props) {\n    return (\n        <AppContext.Consumer>\n            {({coinList, prices, firstVisit}) => {\n                if(!coinList){\n                    return <div> Loading Coins </div>    \n                }\n                if(!firstVisit && !prices) {\n                    return <div> Loading Prices </div>\n                }\n                return <div> {props.children} </div>\n            }}\n\n        </AppContext.Consumer>  \n    )\n    \n}","import React from 'react';\nimport './App.css';\n/* import Welcome from '../Settings/WelcomeMessage'; */\nimport AppLayout from './AppLayout'\nimport AppBar from './AppBar';\nimport {AppProvider} from './AppProvider';\nimport Settings from '../Settings';\nimport Dashboard from '../Dashboard';\nimport Content from '../Shared/Content';\n\nfunction App() {\n  return (\n    <AppLayout>\n      <AppProvider>\n        <AppBar />\n          <Content>\n            <Settings />\n            <Dashboard />\n          </Content>\n      </AppProvider>      \n    </AppLayout>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}